name: Run dbt Models


on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 6 * * *'  # Runs daily at 6 AM UTC

jobs:
  dbt-run:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17  # ✅ Using PostgreSQL 17 
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecommerce_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d ecommerce_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          pip install dbt-postgres

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Waiting for database..."
            sleep 2
          done

      - name: Check PostgreSQL Version
        env:
          PGPASSWORD: postgres  # ✅ Pass the password explicitly
        run: psql -h localhost -U postgres -d ecommerce_db -c "SELECT version();"

      - name: Create dbt profiles directory
        run: mkdir -p ~/.dbt

      - name: Generate dbt profiles.yml
        run: |
          echo "ecommerce_project:" > ~/.dbt/profiles.yml
          echo "  target: dev" >> ~/.dbt/profiles.yml
          echo "  outputs:" >> ~/.dbt/profiles.yml
          echo "    dev:" >> ~/.dbt/profiles.yml
          echo "      type: postgres" >> ~/.dbt/profiles.yml
          echo "      host: localhost" >> ~/.dbt/profiles.yml
          echo "      user: postgres" >> ~/.dbt/profiles.yml
          echo "      password: postgres" >> ~/.dbt/profiles.yml
          echo "      port: 5432" >> ~/.dbt/profiles.yml
          echo "      dbname: ecommerce_db" >> ~/.dbt/profiles.yml
          echo "      schema: public" >> ~/.dbt/profiles.yml

      - name: Run dbt
        env:
          PGPASSWORD: postgres  # ✅ Ensure dbt can access PostgreSQL
        run: dbt run --profiles-dir ~/.dbt
